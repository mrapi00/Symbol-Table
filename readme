Assignment 3 readme File

------------------------------------------------------------------------
What is your name?

Mahmudul Rapi

------------------------------------------------------------------------
What authorized sources of information did you use to complete the
assignment? COPY THE LIST of authorized sources of information given
in the "Policies" web page (also available on armlab in the file
~cos217/AuthorizedSourcesList ) to this section of the readme file,
and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website. 
Such documents include the course's lecture slides and precept handouts.

The course's textbooks.

The course's current staff members outside of class time through Ed.

------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

Debugging was not fun but learned so much about how to make C more object
oriented which is cool and am feeling much more comfortable with pointers.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate on symtablelist.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

I have the 7 Buffer overflow warnings from the client (that the Assignment
specs say to disregard).

------------------------------------------------------------------------
What warnings does critTer generate on symtablelist.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

    symtablelist.c: line 79: medium priority:
    Do you want to validate 'pvValue' through an assert?

Since pvValue is the value associated to each key, it is fine for 
the client to pass it a null value (doesn't harm our implementation). We
also never deference the pvValue pointer, so it's fine for it to be NULL.

    symtablelist.c: line 106: medium priority:
    Do you want to validate 'pvValue' through an assert?

Same reason as above.

    symtablelist.c: line 198: medium priority:
    Do you want to validate 'pvExtra' through an assert?

pvExtra is a non-mandatory argument which is sometimes used based on 
what the function that pfApply points to does, so fine if pvExtra is NULL.

------------------------------------------------------------------------
What warnings does splint generate on symtablehash.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

I have the 7 Buffer overflow warnings from the client (that the Assignment
specs say to disregard).


------------------------------------------------------------------------
What warnings does critTer generate on symtablehash.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

    symtablehash.c: line 179: medium priority:
    Do you want to validate 'pvValue' through an assert?

Since pvValue is the value associated to each key, it is fine for 
the client to pass it a null value (doesn't harm our implementation). We
also never deference the pvValue pointer, so it's fine for it to be NULL.

    symtablehash.c: line 220: medium priority:
    Do you want to validate 'pvValue' through an assert?

Same reason as above. 

    symtablehash.c: line 326: medium priority:
    Do you want to validate 'pvExtra' through an assert?

pvExtra is a non-mandatory argument which is sometimes used based on 
what the function that pfApply points to does, so fine if pvExtra is NULL.

------------------------------------------------------------------------
What are the CPU times reported by testsymtable.c with binding counts
50, 500, 5000, 50000, and 500000 using (1) your linked list
implementation, (2) your non-expanding hash table implementation, and
(3) your expanding hash table implementation? Fill in the blanks.

The linked list implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.010000 seconds.
-- 5000 bindings consumed 1.010000 seconds.
-- 50000 bindings consumed 99.30000 seconds.
-- 500000 bindings consumed More than 5 minutes.

The non-expanding hash table implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000000 seconds.
-- 5000 bindings consumed 0.010000 seconds.
-- 50000 bindings consumed 0.390000 seconds.
-- 500000 bindings consumed 67.750000 seconds.

The expanding hash table implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000000 seconds.
-- 5000 bindings consumed 0.020000 seconds.
-- 50000 bindings consumed 0.210000 seconds.
-- 500000 bindings consumed 2.100000 seconds.
